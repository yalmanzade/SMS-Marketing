@using Microsoft.AspNetCore.Identity
@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    AppUser? user = await UserManager.GetUserAsync(User);
        if (user != null)
        {
            string fullName = $"{user.FirstName} {user.LastName}";
            <li class="nav-item">
                <a class="nav-link btn btn-light" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
                     <i class="fa-regular fa-user"></i>
                     Hello @fullName</a>
            </li>
        }
        else
        {
            <li class="nav-item">
                <a class="nav-link btn btn-info btn-lg" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @User.Identity?.Name</a>
            </li>
        }
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn btn-secondary text-light">
                <i class="fa-solid fa-arrow-right-from-bracket"></i>
                Logout
            </button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
